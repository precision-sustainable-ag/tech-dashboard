# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - TechDashboardProd

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: 'Create env file'
        run: |
          touch .env

          echo REACT_APP_ONFARM_OLD_API_USERNAME=${{ secrets.REACT_APP_ONFARM_OLD_API_USERNAME }} >> .env
          echo REACT_APP_ONFARM_OLD_API_PASSWORD=${{ secrets.REACT_APP_ONFARM_OLD_API_PASSWORD }} >> .env
          echo REACT_APP_ONFARM_DEV_API_URL=${{ secrets.REACT_APP_ONFARM_DEV_API_URL }} >> .env
          echo REACT_APP_ONFARM_PROD_API_URL=${{ secrets.REACT_APP_ONFARM_PROD_API_URL }} >> .env
          echo REACT_APP_ONFARM_OLD_API_URL=${{ secrets.REACT_APP_ONFARM_OLD_API_URL }} >> .env
          echo REACT_APP_HOLOGRAM_WATER_SENSOR_API_KEY=${{ secrets.REACT_APP_HOLOGRAM_WATER_SENSOR_API_KEY }} >> .env
          echo REACT_APP_HOLOGRAM_STRESS_CAM_API_KEY=${{ secrets.REACT_APP_HOLOGRAM_STRESS_CAM_API_KEY }} >> .env
          echo REACT_APP_CONTACT_PERSON_NAME=${{ secrets.REACT_APP_CONTACT_PERSON_NAME }} >> .env
          echo REACT_APP_CONTACT_PERSON_EMAIL=${{ secrets.REACT_APP_CONTACT_PERSON_EMAIL }} >> .env
          echo REACT_APP_DEVELOPER_CONTACT_NAME=${{ secrets.REACT_APP_DEVELOPER_CONTACT_NAME }} >> .env
          echo REACT_APP_DEVELOPER_CONTACT_EMAIL=${{ secrets.REACT_APP_DEVELOPER_CONTACT_EMAIL }} >> .env
          echo REACT_APP_GOOGLE_API_KEY_PROD=${{ secrets.REACT_APP_GOOGLE_API_KEY_PROD }} >> .env
          echo REACT_APP_GOOGLE_API_KEY_DEV=${{ secrets.REACT_APP_GOOGLE_API_KEY_DEV }} >> .env
          echo REACT_APP_GITHUB_AUTH_TOKEN=${{ secrets.REACT_APP_GITHUB_AUTH_TOKEN }} >> .env
          echo REACT_APP_ONFARM_GLOBAL_API_KEY=${{ secrets.REACT_APP_ONFARM_GLOBAL_API_KEY }} >> .env

          cat .env

      - name: npm install, build, and test
        run: |
          rm -rf node_modules
          rm package-lock.json
          npm install
          npm run build --if-present

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app

      - name: unzip artifact for deployment
        run: unzip release.zip

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'TechDashboardProd'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_4C835BE530C0470C9E30694FF0DD800A }}
          package: .
